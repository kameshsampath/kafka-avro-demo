kafka.group.id=${quarkus.uuid}
quarkus.devservices.enabled=false

## Kafka Core Setup/Config
# Required connection configs for Kafka producer, consumer, and admin
# loaded vai KAFKA_BOOTSTRAP_SERVERS env variable
# kafka.bootstrap.servers=<your broker urls>
kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=PLAIN
kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${CLUSTER_API_KEY}' password='${CLUSTER_API_SECRET}';

# Schema Registry Settings
# Loaded via KAFKA_SCHEMA_REGISTRY_URL environment variable
#kafka.schema.registry.url=<kafka schema registry>

kafka.basic.auth.credentials.source=USER_INFO
kafka.schema.registry.basic.auth.user.info='${SR_API_KEY}:${SR_API_SECRET}'

## Smallrye Kafka connector setup

# set the connector for the outgoing channel to `smallrye-kafka`
mp.messaging.outgoing.movies.connector=smallrye-kafka

# schema registry this is required for smallrye connector to autodetect the 
# avro serde
mp.messaging.connector.smallrye-kafka.schema.registry.url=${KAFKA_SCHEMA_REGISTRY_URL}

# set the topic name for the channel to `movies`
mp.messaging.outgoing.movies.topic=movies

# set the connector for the incoming channel to `smallrye-kafka`
mp.messaging.incoming.movies-from-kafka.connector=smallrye-kafka

# set the topic name for the channel to `movies`
mp.messaging.incoming.movies-from-kafka.topic=movies

# disable auto-commit, Reactive Messaging handles it itself
mp.messaging.incoming.movies-from-kafka.enable.auto.commit=false

mp.messaging.incoming.movies-from-kafka.auto.offset.reset=earliest

